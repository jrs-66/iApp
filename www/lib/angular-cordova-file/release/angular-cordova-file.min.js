/**
 * Cordova files integration into AngularJS
 * @version v1.1.2
 * @link http://github.com/sroze/angular-cordova-file
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="angular-cordova-file"),function(a,b,c){b.module("angular-cordova-file",["angular-simple-model","angularFileUpload"]),b.module("angular-cordova-file").factory("CordovaFile",function(d,e,f){var g=f.extend({getPreviewUrl:function(){var b=d.defer();if(this.has("dataUrl"))b.resolve(this.get("dataUrl"));else if(this.has("uri"))a.resolveLocalFileSystemURL!==c?a.resolveLocalFileSystemURL(this.get("uri"),function(a){b.resolve(a.toURL())}):b.resolve(this.get("uri"));else if(this.has("file")){var e=new FileReader;e.onloadend=function(a){b.resolve(a.target.result)},e.onerror=function(a){b.reject(a)},e.readAsDataURL(this.get("file"))}else b.reject("Unable to get preview URL");return b.promise},upload:function(a){var c=d.defer();if(a=a||{},"undefined"==typeof FileTransfer)e.upload({url:a.url,method:a.method,headers:a.headers,withCredentials:a.withCredentials,data:a.data,file:this.get("file"),fileFormDataName:a.fileKey}).progress(function(a){var b=parseInt(100*a.loaded/a.total);c.notify(b)}).success(function(a){c.resolve(a)}).error(function(a){c.reject(a)});else if(this.has("uri")){var f=this.get("uri"),g=new FileUploadOptions;g.fileKey=a.fileKey,g.fileName=f.substr(f.lastIndexOf("/")+1),g.mimeType=this.get("contentType"),g.headers=a.headers,g.params=a.data;var h=new FileTransfer;h.onprogress=function(a){var b=parseInt(100*a.loaded/a.total);c.notify(b)},h.upload(f,encodeURI(a.url),function(a){var d=b.fromJson(a.response);c.resolve(d)},function(a){c.reject(a)},g)}else c.reject("There's not URI");return c.promise}},{fromFile:function(a){return new g({file:a,contentType:a.type})},fromUri:function(a){return new g({uri:a})}});return g}),b.module("angular-cordova-file").directive("cordovaFile",function(a,d,e,f,g){function h(a,c){var e=d.defer();return navigator.camera.getPicture(function(a){if(-1==a.indexOf("://"))a="file://"+a;else if("content://"==a.substr(0,10))return e.reject("Image provider not supported");var b=g.fromUri(a);b.set("contentType","image/png"),e.resolve([b])},function(a){e.reject(a)},b.extend({quality:100,sourceType:a,destinationType:Camera.DestinationType.FILE_URI,encodingType:Camera.EncodingType.PNG,correctOrientation:!0},c)),e.promise}function i(a,b,c){function d(a){h(a,c).then(function(a){b.close(a)},function(a){b.dismiss(a)})}a.close=function(){b.dismiss("canceled")},a.takePicture=function(){d(Camera.PictureSourceType.CAMERA)},a.fromLibrary=function(){d(Camera.PictureSourceType.PHOTOLIBRARY)}}var j="undefined"!=typeof Camera?{camera:Camera.PictureSourceType.CAMERA,photoLibrary:Camera.PictureSourceType.PHOTOLIBRARY}:{};return{link:function(b,d,k){var l,m=f(k.cordovaFile),n={};k.options&&b.$watch(k.options,function(a){n=a||n}),k.source&&b.$watch(k.source,function(a){l=a}),d.on("change",function(a){if("undefined"==typeof Camera){var c,d,f=[];if(c=a.target.files,null!=c)for(d=0;d<c.length;d++)f.push(g.fromFile(c.item(d)));e(function(){m(b,{$files:f,$event:a})})}}),d.on("click",function(d){if("undefined"!=typeof Camera)if(d.preventDefault(),l!==c){if(!(l in j))throw new Error(l+" data source not found");h(j[l],n).then(function(a){e(function(){m(b,{$files:a,$event:{}})})},function(a){console.log("Unable to request picture"),console.log(a)})}else{if(!a.has("$modal"))throw new Error("If no `data-source` attribute is specified, `$modal` must be available (see `angular-ui-bootstrap` or another implementation)");var f=a.get("$modal").open({templateUrl:"template/cordova-file/choice.html",controller:i,resolve:{options:function(){return n}}});f.result.then(function(a){e(function(){m(b,{$files:a,$event:{}})})},function(a){console.log(a)}),b.$on("$destroy",function(){f.dismiss("Scope destroyed")})}})}}})}(window,window.angular);